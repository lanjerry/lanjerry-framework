package ${packageName}.service.${moduleName};

#foreach ($import in ${serviceImports})
import ${import}
#end

import com.baomidou.mybatisplus.extension.service.IService;

/**
 * <p>
 * ${functionName}服务类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
public interface ${ClassName}Service extends IService<${ClassName}> {
#if($!{tplFunctions})
## 设置新增获取修改的DTO的名称
#if(${showAddFlag} || ${showUpdateFlag})
#set($saveOrUpdateDTOName = "")
#if(${showAddFlag} && ${showUpdateFlag})
#set($saveOrUpdateDTOName = "SaveOrUpdateDTO")
#elseif(${showAddFlag})
#set($saveOrUpdateDTOName = "SaveDTO")
#else
#set($saveOrUpdateDTOName = "UpdateDTO")
#end
#end
#if(${showPageListFlag})

    /**
     * 分页查询${functionName}列表
     *
     * @author ${author}
     * @since ${datetime}
     * @param dto ${functionName}查询参数
     * @return com.baomidou.mybatisplus.core.metadata.IPage<${packageName}.vo.${moduleName}.${ClassName}PageVO>
     */
    IPage<${ClassName}PageVO> page${BusinessName}s(${ClassName}PageDTO dto);
#end
#if(${showListFlag})

    /**
     * 查询${functionName}列表
     *
     * @author ${author}
     * @since ${datetime}
     * @param dto ${functionName}查询参数
     * @return java.util.List<${packageName}.vo.${moduleName}.${ClassName}ListVO>
     */
    List<${ClassName}ListVO> list${BusinessName}s(${ClassName}ListDTO dto);
#end
#if(${showUpdateFlag})

    /**
     * 根据${pkComment}查询${functionName}信息
     *
     * @author ${author}
     * @since ${datetime}
     * @param ${pkJavaField} ${pkComment}
     * @return ${packageName}.vo.${moduleName}.${ClassName}InfoVO
     */
    ${ClassName}InfoVO get${BusinessName}(${pkJavaType} ${pkJavaField});
#end
#if(${showAddFlag})

    /**
     * 新增${functionName}
     *
     * @author ${author}
     * @since ${datetime}
     * @param dto ${functionName}新增参数
     */
    void save${BusinessName}(${ClassName}${saveOrUpdateDTOName} dto);
#end
#if(${showUpdateFlag})

    /**
     * 更新${functionName}
     *
     * @author ${author}
     * @since ${datetime}
     * @param ${pkJavaField} ${pkComment}
     * @param dto ${functionName}更新参数
     */
    void update${BusinessName}(${pkJavaType} ${pkJavaField}, ${ClassName}${saveOrUpdateDTOName} dto);
#end
#if(${showDeleteFlag})

    /**
     * 删除${functionName}
     *
     * @author ${author}
     * @since ${datetime}
     * @param ${pkJavaField}s ${pkComment}数组
     */
    void remove${BusinessName}s(${pkJavaType}[] ${pkJavaField}s);
#end
#if(${showExportFlag})

    /**
     * 导出${functionName}
     *
     * @author ${author}
     * @since ${datetime}
     * @param dto ${functionName}导出参数
     * @param response 输出流
     */
    void export${BusinessName}s(${ClassName}ExportDTO dto, HttpServletResponse response);
#end
#end
}
